import { TestBed } from '@angular/core/testing';
import { FieldGroupingService } from './field-grouping.service';

describe('FieldGroupingService', () => {
  let service: FieldGroupingService;

  beforeEach(() => {
    TestBed.configureTestingModule({
      providers: [FieldGroupingService]
    });
    service = TestBed.inject(FieldGroupingService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });

  it('should group fields correctly', () => {
    const testData = [
      {
        fields: [
          { label: 'Field1', side: 'left', seq: 1 },
          { label: 'Field2', side: 'right', seq: 2 },
          { label: 'Field3', side: 'full', seq: 3 }
        ]
      }
    ];

    const result = service.groupFields(testData);

    expect(result[0].fieldsLeft.length).toBe(1);
    expect(result[0].fieldsRight.length).toBe(1);
    expect(result[0].fieldsFull.length).toBe(1);
    expect(result[0].fieldsLeft[0].label).toBe('Field1');
    expect(result[0].fieldsRight[0].label).toBe('Field2');
    expect(result[0].fieldsFull[0].label).toBe('Field3');
  });

  it('should sort by label when sortByLabel is true', () => {
    const testData = [
      {
        fields: [
          { label: 'C', side: 'left', seq: 1 },
          { label: 'A', side: 'left', seq: 2 },
          { label: 'B', side: 'left', seq: 3 }
        ]
      }
    ];

    const result = service.groupFields(testData, true);

    expect(result[0].fieldsLeft[0].label).toBe('A');
    expect(result[0].fieldsLeft[1].label).toBe('B');
    expect(result[0].fieldsLeft[2].label).toBe('C');
  });

  it('should not modify the original data', () => {
    const testData = [
      {
        fields: [
          { label: 'Field1', side: 'left', seq: 1 },
          { label: 'Field2', side: 'right', seq: 2 }
        ]
      }
    ];

    const originalDataStringified = JSON.stringify(testData);
    service.groupFields(testData);

    expect(JSON.stringify(testData)).toBe(originalDataStringified);
  });
});
